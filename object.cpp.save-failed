#include <iostream>
#include <SFML/Graphics.hpp>
#include "object.h"

Object::Object()
{
    sprite.setPosition(0, 0);

    name = "object";

    rotation = 0;

    visible = true;
    mouseUnder = false;

    onClick = "";
    onMouseMove = "";
    onMouseExit = "";
}

Object::Object(const Object& _obj):sf::Transformable(_obj)
{
    sprite = _obj.sprite;
    texture = _obj.texture;
    std::cout << "in obj copy: " << sprite.getTexture() << std::endl;
    //sprite.setTexture(*texture);

    name = _obj.name;

    rotation = _obj.rotation;
    visible = _obj.visible;
    mouseUnder = _obj.mouseUnder;

    onClick = _obj.onClick;
    onMouseMove = _obj.onMouseMove;
    onMouseExit = _obj.onMouseExit;
}

Object::Object(sf::String _name)
{
    sprite.setPosition(0, 0);

    name = _name;

    rotation = 0;
    visible = true;
    mouseUnder = false;

    onClick = "";
    onMouseMove = "";
    onMouseExit = "";
}

Object::Object(sf::String _name, float _x, float _y)
{
    sprite.setPosition(_x, _y);

    name = _name;

    rotation = 0;
    visible = true;
    mouseUnder = false;

    onClick = "";
    onMouseMove = "";
    onMouseExit = "";
}

Object::Object(sf::String _name, float _x, float _y, sf::Texture& _texture)
{

    texture = &_texture;
    std::cout << "in obj origin: " << &_texture << std::endl;
    std::cout << "in obj: " << texture << std::endl;
    sprite.setPosition(_x, _y);
    sprite.setTexture(_texture);

    name = _name;

    rotation = 0;
    visible = true;
    mouseUnder = false;

    onClick = "";
    onMouseMove = "";
    onMouseExit = "";
}

Object::~Object()
{

}

void Object::setSize(float _width, float _height)
{
    sprite.setScale(_width/width, _height/height);
}
sf::Vector2f Object::getSize()
{
    sf::FloatRect rect = sprite.getGlobalBounds();
    return sf::Vector2f(rect.width, rect.height);
}

